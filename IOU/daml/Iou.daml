--  |   MODULE NAME
module Iou where
--  |   MODULE NAME END

type IouCid = ContractId Iou

template Iou
    --  |   CONSTRUCTOR DEFINITION
    with
        issuer      : Party
        owner       : Party
        currency    : Text
        amount      : Decimal
        observers   : [Party]
    --  |   CONSTRUCTOR DEFINITION END
    where

        --  |   TEMPlATE PRECONDITION
        ensure amount > 0.0
        --  |   TEMPlATE PRECONDITION END

        --  |   SIGNATORIES DEFINITION
        signatory issuer, owner
        --  |   SIGNATORIES DEFINITION END

        --  |   OBSERVERS
        observer observers
        --  |   OBSERVERS END

        --  |   CHOICE DEFINITION
        --  |   RETURN TYPE (IouCid, IouCid)
        choice Iou_Split : (IouCid, IouCid)
            with 
                splitAmount: Decimal
            controller owner
            do 
                let restAmount = amount - splitAmount
                splitCid <- create this with
                    amount = splitAmount
                restCid <- create this with
                    amount = restAmount
                return (splitCid, restCid)
        
        choice Iou_Merge : IouCid
            with
                otherCid : IouCid
            controller owner
            do
                otherIou <- fetch otherCid
                --  |   Check the two IOU's are compatible
                assertMsg "IOU's not compatible" (
                    currency == otherIou.currency &&
                    owner    == otherIou.owner    &&
                    issuer   == otherIou.issuer 
                    )

                --  | Retrieve the old Iou
                archive otherCid

                --  | Return the merged Iou
                create this with
                    amount = amount + otherIou.amount
        --  |   CHOICE DEFINITION END

        choice Iou_Transfer : ContractId IouTransfer
            with
                newOwner : Party
            controller owner
            do
                create IouTransfer with
                    iou = this
                    newOwner = newOwner

template IouTransfer
  with
    iou : Iou
    newOwner : Party
  where
    signatory iou.issuer, iou.owner
    observer newOwner

    choice IouTransfer_Cancel : IouCid
      controller iou.owner
      do create iou

    choice IouTransfer_Reject : IouCid
      controller newOwner
      do create iou

    choice IouTransfer_Accept : IouCid
      controller newOwner
      do
        create iou with
          owner = newOwner
          observers = []

